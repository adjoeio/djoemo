// Code generated by MockGen. DO NOT EDIT.
// Source: log_interface.go

// Package mock_djoemo is a generated GoMock package.
package mock

import (
	context "context"
	djoemo "djoemo"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockLogInterface is a mock of LogInterface interface
type MockLogInterface struct {
	ctrl     *gomock.Controller
	recorder *MockLogInterfaceMockRecorder
}

// MockLogInterfaceMockRecorder is the mock recorder for MockLogInterface
type MockLogInterfaceMockRecorder struct {
	mock *MockLogInterface
}

// NewMockLogInterface creates a new mock instance
func NewMockLogInterface(ctrl *gomock.Controller) *MockLogInterface {
	mock := &MockLogInterface{ctrl: ctrl}
	mock.recorder = &MockLogInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLogInterface) EXPECT() *MockLogInterfaceMockRecorder {
	return m.recorder
}

// WithContext mocks base method
func (m *MockLogInterface) WithContext(ctx context.Context) djoemo.LogInterface {
	ret := m.ctrl.Call(m, "WithContext", ctx)
	ret0, _ := ret[0].(djoemo.LogInterface)
	return ret0
}

// WithContext indicates an expected call of WithContext
func (mr *MockLogInterfaceMockRecorder) WithContext(ctx interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WithContext", reflect.TypeOf((*MockLogInterface)(nil).WithContext), ctx)
}

// WithFields mocks base method
func (m *MockLogInterface) WithFields(fields map[string]interface{}) djoemo.LogInterface {
	ret := m.ctrl.Call(m, "WithFields", fields)
	ret0, _ := ret[0].(djoemo.LogInterface)
	return ret0
}

// WithFields indicates an expected call of WithFields
func (mr *MockLogInterfaceMockRecorder) WithFields(fields interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WithFields", reflect.TypeOf((*MockLogInterface)(nil).WithFields), fields)
}

// Info mocks base method
func (m *MockLogInterface) Info(message string) {
	m.ctrl.Call(m, "Info", message)
}

// Info indicates an expected call of Info
func (mr *MockLogInterfaceMockRecorder) Info(message interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Info", reflect.TypeOf((*MockLogInterface)(nil).Info), message)
}

// Warn mocks base method
func (m *MockLogInterface) Warn(message string) {
	m.ctrl.Call(m, "Warn", message)
}

// Warn indicates an expected call of Warn
func (mr *MockLogInterfaceMockRecorder) Warn(message interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Warn", reflect.TypeOf((*MockLogInterface)(nil).Warn), message)
}

// Error mocks base method
func (m *MockLogInterface) Error(message string) {
	m.ctrl.Call(m, "Error", message)
}

// Error indicates an expected call of Error
func (mr *MockLogInterfaceMockRecorder) Error(message interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Error", reflect.TypeOf((*MockLogInterface)(nil).Error), message)
}
